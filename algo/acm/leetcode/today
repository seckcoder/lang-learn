+ Fraction to Recurring Decimal 
+ Find Peak Element
+ Find Minimum in Rotated Sorted Array
+ Find Minimum in Rotated Sorted Array 2
+ Sum Root to Leaf Numbers
+ Binary Tree Zigzag Level Order Traversal  (Is there other method for level order traversal without copy the stack every time?)
+ Binary Tree Inorder Traversal
+ Restore IP Addresses
+ Reverse Linked List II
+ Unique Binary Search Trees 2
+ Subsets
+ Subsets 2
+ Partition List (Two sentinel list)
+ Remove Duplicates from Sorted Array 1
+ Remove Duplicates from Sorted Array 2
+ Maximum Product Subarray
+ Decode Ways (Dynamic programming?)
+ Gray Code
+ Combinations
+ Sort Colors
+ Search a 2D Matrix
+ Set Matrix Zeros 
+ Simplify Path
+ Unique Path 1/2
+ Rotate List
+ Permutation Sequence (K th permutation)
+ Spiral Matrix 1
+ Spiral Matrix 2
+ Maximum Subarray
+ Pow(x,n)
+ Anagrams
+ Permutations 1
+ Permutations 2
+ Combination Sum (More efficient implementation?)
+ Combination Sum 2
+ Search Insert Position
+ Search for a Range
+ Next Permutation
+ Divide Two Integers
+ 3sum
+ 3sum closest
+ Add Two Numbers
- Twitter 
+ Container with most water: proof
- 4Sum optimized version?
- Binsearch rotated update
- Counting Primes: faster version?
- Bitwise AND of Numbers Range
- Factorial Trailing Zeroes
- Majority Element (Faster solution)
- Intersection of Two Linked Lists
- Min Stack (Faster solution?)
- ZigZag Conversion (Better solution?)


TODO:

Pearls of functional programming
